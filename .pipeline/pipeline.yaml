---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
  - name: pipeline-pvc
    description: pipeline pvc name place holder
  - name: pipeline-id
    description: id of the pipeline run
  - name: registry-namespace
    description: The namespace in the container image registry. You can set it up
      with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: repo
    description: GIT_REPO
  - name: repository
    description: The git repo
  - name: app-name
    description: The name of your app
  - name: revision
    description: the branch for the git repo
  - name: registry-region
    description: The IBM Cloud region for image registry
  - name: api-key
    description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
      Service API and interact with the cluster. You can obtain your API key with
      'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
      by clicking **Create API key** (Each API key only can be viewed once).
  - name: branch
    description: the branch for the git repo
  - name: evidence-locker
    description: evidence locker for the app
  - name: cluster-name
    description: the name of the cluster to target
  resources:
  - name: app-image
    type: image
  - name: target-cluster
    type: cluster
  tasks:
    - name: fetch-code
      taskRef:
        name: clone-repo-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: repository
        value: $(params.repository)
      - name: branch
        value: $(params.branch)
    - name: pre-build-tests
      runAfter: [fetch-code]
      taskRef:
        name: pre-build-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: pipeline-id
        value: $(params.pipeline-id)
      - name: registry-namespace
        value: $(params.registry-namespace)
      - name: repo
        value: $(params.repo)
      - name: repository
        value: $(params.repository)
      - name: app-name
        value: $(params.app-name)
      - name: revision
        value: $(params.revision)
      - name: registry-region
        value: $(params.registry-region)
      - name: api-key
        value: $(params.api-key)
      - name: evidence-locker
        value: $(params.evidence-locker)
    - name: containerize
      runAfter: [pre-build-tests]
      taskRef:
        name: containerize-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: additionalTagsScript
        value: |
          # Include the clone task output variables in the environment
          source /artifacts/build.properties
          # The script is providing tag(s) as output
          # But logs can be written as error stderr
          echo "Providing an image tag including git branch and commit" >&2
          # Add a specific tag with branch and commit
          echo "${BUILD_TIMESTAMP}-${GIT_BRANCH}-${GIT_COMMIT}"
      resources:
        outputs:
          - name: builtImage
            resource: app-image
    - name: vulnerability-advisor
      taskRef:
        name: vulnerability-advisor-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: scanReportFile
          value: 'app-image-va-report.json'
        # - name: maxIteration
        #   value: '5'
        # - name: sleepTime
        #   value: '3'
        # - name: failOnScannedIssues
        #   value: 'false'
      resources:
        inputs:
          - name: image
            resource: app-image
            from:
              - containerize
    - name: additional-image-checks
      taskRef:
        name: additional-image-checks-task
      runAfter: [vulnerability-advisor]
      params:
    - name: cis-benchmarks
      taskRef:
        name: cis-benchmarks-task
      runAfter: [vulnerability-advisor]
      params:
    - name: oss-licence-check
      taskRef:
        name: oss-licence-check-task
      runAfter: [vulnerability-advisor]
      params:
    - name: deploy-dev
      taskRef:
        name: deploy-dev-task
      runAfter: [vulnerability-advisor]
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: registry-namespace
        value: $(params.registry-namespace)
      - name: repo
        value: $(params.repo)
      - name: repository
        value: $(params.repository)
      - name: app-name
        value: $(params.app-name)
      - name: revision
        value: $(params.revision)
      - name: registry-region
        value: $(params.registry-region)
      - name: api-key
        value: $(params.api-key)
      - name: cluster-name
        value: $(params.cluster-name)
