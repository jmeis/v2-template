---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
  - name: pipeline-pvc
    description: pipeline pvc name place holder
  - name: pipeline-id
    description: id of the pipeline run
  - name: registry-namespace
    description: The namespace in the container image registry. You can set it up
      with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
  - name: build-cluster-namespace
    description: Cluster namespace
  - name: build-cluster-name
    description: Build Cluster
  - name: repo
    description: GIT_REPO
  - name: prod-cluster-namespace
    description: Cluster namespace
  - name: build-region
    description: Build region
  - name: vault_name
    description: Specify the Key Protect instance name, where the image signing keys
      have been stored. The build and validation signer fields contain default names
      for these signers. The values must match the values created in the Key-Management-Admin-Template.
      See https://github.com/open-toolchain/key-management-admin-toolchain
  - name: repository
    description: The git repo
  - name: prod-region
    description: Cluster region
  - name: app-name
    description: The name of your app
  - name: revision
    description: the branch for the git repo
  - name: prod-cluster-name
    description: Cluster name
  - name: registry-region
    description: The IBM Cloud region for image registry
  - name: api-key
    description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
      Service API and interact with the cluster. You can obtain your API key with
      'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
      by clicking **Create API key** (Each API key only can be viewed once).
  - name: prod-resource-group
    description: Resource Group
  - name: build-resource-group
    description: Build Resource Group
  - name: validation_signer
    description: VALIDATION_SIGNER
  - name: build_signer
    description: BUILD_SIGNER
  - name: branch
    description: the branch for the git repo
  - name: evidence-locker
    description: evidence locker for the app
  resources:
  - name: app-image
    type: image
  - name: target-cluster
    type: cluster
  tasks:
    - name: fetch-code
      taskRef:
        name: clone-repo-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: repository
        value: $(params.repository)
      - name: branch
        value: $(params.branch)
    - name: pre-build-tests
      taskRef:
        name: pre-build-task
      runAfter: [fetch-code]
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: pipeline-id
        value: $(params.pipeline-id)
      - name: registry-namespace
        value: $(params.registry-namespace)
      - name: build-cluster-namespace
        value: $(params.build-cluster-namespace)
      - name: build-cluster-name
        value: $(params.build-cluster-name)
      - name: repo
        value: $(params.repo)
      - name: prod-cluster-namespace
        value: $(params.prod-cluster-namespace)
      - name: build-region
        value: $(params.build-region)
      - name: vault_name
        value: $(params.vault_name)
      - name: repository
        value: $(params.repository)
      - name: prod-region
        value: $(params.prod-region)
      - name: app-name
        value: $(params.app-name)
      - name: revision
        value: $(params.revision)
      - name: prod-cluster-name
        value: $(params.prod-cluster-name)
      - name: registry-region
        value: $(params.registry-region)
      - name: api-key
        value: $(params.api-key)
      - name: prod-resource-group
        value: $(params.prod-resource-group)
      - name: build-resource-group
        value: $(params.build-resource-group)
      - name: validation_signer
        value: $(params.validation_signer)
      - name: build_signer
        value: $(params.build_signer)
      - name: evidence-locker
        value: $(params.evidence-locker)
    - name: evidence-collection-unit-tests
      runAfter: [pre-build-tests]
      taskRef:
        name: evidence-collector-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: pipeline-id
        value: $(params.pipeline-id)
      - name: evidence-locker
        value: $(params.evidence-locker)
      - name: api-key
        value: $(params.api-key)
    - name: containerize
      runAfter: [pre-build-tests]
      taskRef:
        name: containerize-task
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: additionalTags
        value: '1.0.0-dev'
      - name: additionalTagsScript
        value: |
          # Include the clone task output variables in the environment
          source /artifacts/build.properties
          # The script is providing tag(s) as output
          # But logs can be written as error stderr
          echo "Providing an image tag including git branch and commit" >&2
          # Add a specific tag with branch and commit
          echo "${BUILD_TIMESTAMP}-${GIT_BRANCH}-${GIT_COMMIT}"
      resources:          
        outputs:
          - name: builtImage
            resource: app-image
    - name: vulnerability-advisor
      taskRef:
        name: vulnerability-advisor-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: scanReportFile
          value: 'app-image-va-report.json'
        # - name: maxIteration
        #   value: '5'
        # - name: sleepTime
        #   value: '3'
        # - name: failOnScannedIssues          
        #   value: 'false'
      resources:          
        inputs:
          - name: image
            resource: app-image
            from:
              - containerize
    - name: validate
      taskRef:
        name: validate-task
      runAfter: [vulnerability-advisor]
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: registry-namespace
        value: $(params.registry-namespace)
      - name: build-cluster-namespace
        value: $(params.build-cluster-namespace)
      - name: build-cluster-name
        value: $(params.build-cluster-name)
      - name: repo
        value: $(params.repo)
      - name: prod-cluster-namespace
        value: $(params.prod-cluster-namespace)
      - name: build-region
        value: $(params.build-region)
      - name: vault_name
        value: $(params.vault_name)
      - name: repository
        value: $(params.repository)
      - name: prod-region
        value: $(params.prod-region)
      - name: app-name
        value: $(params.app-name)
      - name: revision
        value: $(params.revision)
      - name: prod-cluster-name
        value: $(params.prod-cluster-name)
      - name: registry-region
        value: $(params.registry-region)
      - name: api-key
        value: $(params.api-key)
      - name: prod-resource-group
        value: $(params.prod-resource-group)
      - name: build-resource-group
        value: $(params.build-resource-group)
      - name: validation_signer
        value: $(params.validation_signer)
      - name: build_signer
        value: $(params.build_signer)
    - name: fetch-iks-cluster-config
      runAfter: [validate]
      taskRef:
        name: fetch-iks-cluster-config
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: clusterPipelineResourcesDirectoryFallback
          value: .tekton-clusters
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
        outputs:
          - name: cluster
            resource: target-cluster
    - name: pipeline-1-kubectl-task
      runAfter: [fetch-iks-cluster-config]
      taskRef:
        name: kubernetes-contextual-execution
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: task-pvc-mountpath
          value: /pipelinerun
        - name: clusterPipelineResourcesDirectory
          value: /pipelinerun/.tekton-clusters
        - name: script
          value: |
            echo "** Here is the kubectl version:"
            kubectl version
            echo "** Here is the kubectl cluster-info:"
            kubectl cluster-info
            echo "** Here are the kubectl namespaces:"
            kubectl get namespaces
      resources:          
        inputs:
          - name: cluster
            resource: target-cluster
            from:
              - fetch-iks-cluster-config
    - name: deploy-dev
      taskRef:
        name: deploy-dev-task
      runAfter: [pipeline-1-kubectl-task]
      params:
      - name: task-pvc
        value: $(params.pipeline-pvc)
      - name: registry-namespace
        value: $(params.registry-namespace)
      - name: build-cluster-namespace
        value: $(params.build-cluster-namespace)
      - name: build-cluster-name
        value: $(params.build-cluster-name)
      - name: repo
        value: $(params.repo)
      - name: prod-cluster-namespace
        value: $(params.prod-cluster-namespace)
      - name: build-region
        value: $(params.build-region)
      - name: vault_name
        value: $(params.vault_name)
      - name: repository
        value: $(params.repository)
      - name: prod-region
        value: $(params.prod-region)
      - name: app-name
        value: $(params.app-name)
      - name: revision
        value: $(params.revision)
      - name: prod-cluster-name
        value: $(params.prod-cluster-name)
      - name: registry-region
        value: $(params.registry-region)
      - name: api-key
        value: $(params.api-key)
      - name: prod-resource-group
        value: $(params.prod-resource-group)
      - name: build-resource-group
        value: $(params.build-resource-group)
      - name: validation_signer
        value: $(params.validation_signer)
      - name: build_signer
        value: $(params.build_signer)
