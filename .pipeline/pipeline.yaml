---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: pipeline-pvc
      description: pipeline pvc name place holder
    - name: pipelineRunId
      description: pipelineRunId unique ID
    - name: registry-namespace
      description: The namespace in the container image registry. You can set it up
        with {bx cr namespace-add]. Learn more at
        https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started.
    - name: repo
      description: GIT_REPO
    - name: repository
      description: The git repo
    - name: app-name
      description: The name of your app
    - name: revision
      description: the branch for the git repo
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: branch
      description: the branch for the git repo
    - name: cluster-name
      description: the name of the cluster to target
    - name: dev-cluster-namespace
      description: the namespace
    - name: repository-integration
      description: the repo integration name
    - name: validation-signer
      description: validation signer
    - name: vault-name
      description: Specify the Key Protect instance name, where the image signing keys
        have been stored. The build and validation signer fields contain default names
        for these signers. The values must match the values created in the Key-Management-Admin-Template.
        See https://github.com/open-toolchain/key-management-admin-toolchain
    - name: dev-resource-group
      description: Resource Group
    - name: dev-region
      description: target region
    - name: pipeline-debug
      description: toggles debug mode for the pipeline
    - name: evidence-repo
      description: evidence repo
    - name: commit-id
      description: commit id
    - name: pr-url
      description: pr url
    - name: inventory-repo
      description: inventory repository owner and name
  resources:
    - name: app-image
      type: image
    - name: target-cluster
      type: cluster
  tasks:
    - name: fetch-credentials
      taskRef:
        name: get-git-credentials
      params:
        - name: credentials-pvc
          value: $(params.pipeline-pvc)
        - name: ibmcloud-api-key
          value: $(params.api-key)
        - name: repository
          value: $(params.repository)
        - name: repository-integration
          value: $(params.repository-integration)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: fetch-code
      runAfter: [fetch-credentials]
      taskRef:
        name: git-clone
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: unit-tests
      runAfter: [fetch-code]
      taskRef:
        name: unit-tests-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: pipelineRunId
          value: $(params.pipelineRunId)
        - name: context
          value: tekton/ci-unit-tests
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: gitsecure-vuln
      runAfter: [unit-tests]
      taskRef:
        name: gitsecure-discovery-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: apikey
          value: $(params.api-key)
        - name: pipelineRunId
          value: $(params.pipelineRunId)
        - name: evidence-repo
          value: $(params.evidence-repo)
        - name: commit-id
          value: $(params.commit-id)
    - name: gitsecure-vuln-remediation
      runAfter: [gitsecure-vuln]
      taskRef:
        name: gitsecure-vulnerability-remediation-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: pipeline-run-id
          value: $(params.pipelineRunId)
        - name: pr-url
          value: $(params.pr-url)
        - name: commit-id
          value: $(params.commit-id)
    - name: gitsecure-cis
      taskRef:
        name: gitsecure-cis-task
      runAfter: [gitsecure-vuln]
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: pipeline-run-id
          value: $(params.pipelineRunId)
        - name: pr-url
          value: $(params.pr-url)
        - name: commit-id
          value: $(params.commit-id)
    - name: gitsecure-ossc
      runAfter: [gitsecure-vuln]
      taskRef:
        name: gitsecure-ossc-task
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: pipeline-run-id
          value: $(params.pipelineRunId)
        - name: evidence-repo
          value: $(params.evidence-repo)
        - name: commit-id
          value: $(params.commit-id)
    - name: gitsecure-evidence-emitter
      runAfter: [gitsecure-ossc]
      taskRef:
        name: gitsecure-evidence-emitter-task
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: apikey
          value: $(params.api-key)
        - name: pipelineRunId
          value: $(params.pipelineRunId)
        - name: evidence-repo
          value: $(params.evidence-repo)
        - name: commit-id
          value: $(params.commit-id)
    - name: check-github-statuses
      runAfter: [gitsecure-vuln]
      taskRef:
        name: check-github-statuses-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: pipelineRunId
          value: $(params.pipelineRunId)
        - name: target-branch
          value: $(params.branch)
        - name: repository-integration
          value: $(params.repository-integration)
        - name: requiredChecks
          value: |
            [{
              "type": "check-run",
              "name": "secret-detection",
              "params": {
                "name": "whitewater-detect-secrets"
              }
            }, {
              "type": "branch-protection",
              "name": "code-review",
              "params": {
                "checks": [
                  "whitewater-detect-secrets",
                  "tekton/pr-compliance"
                ]
              }
            }, {
              "type": "status",
              "name": "unit-tests",
              "params": {
                "name": "tekton/ci-unit-tests"
              }
            }]
        - name: context
          value: tekton/ci-compliance
        - name: collect-evidence
          value: "true"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: containerize
      runAfter: [check-github-statuses]
      taskRef:
        name: containerize-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: additional-tags-script
          value: |
            # Include the clone task output variables in the environment
            source /artifacts/build.properties
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "Providing an image tag including git branch and commit" >&2
            # Add a specific tag with branch and commit
            echo "${BUILD_TIMESTAMP}-${GIT_BRANCH}-${GIT_COMMIT}"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      resources:
        outputs:
          - name: built-image
            resource: app-image
    - name: update-inventory
      taskRef:
        name: update-inventory-task
      runAfter:
        - containerize
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: inventory-repo
          value: $(params.inventory-repo)
    - name: vulnerability-advisor
      taskRef:
        name: vulnerability-advisor-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: scanReportFile
          value: 'app-image-va-report.json'
        - name: ibmcloud-api-key
          value: $(params.api-key)
        # - name: maxIteration
        #   value: '5'
        # - name: sleepTime
        #   value: '3'
        # - name: failOnScannedIssues
        #   value: 'false'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      resources:
        inputs:
          - name: image
            resource: app-image
            from:
              - containerize
    - name: additional-image-checks
      taskRef:
        name: additional-image-checks-task
      runAfter: [vulnerability-advisor]
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: docker-image-sign
      runAfter: [additional-image-checks]
      taskRef:
        name: docker-signing-task
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: app-name
          value: $(params.app-name)
        - name: api-key
          value: $(params.api-key)
        - name: validation-signer
          value: $(params.validation-signer)
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: registry-region
          value: $(params.registry-region)
        - name: vault-name
          value: $(params.vault-name)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: region
          value: $(params.dev-region)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: fetch-iks-cluster-config
      runAfter: [docker-image-sign]
      taskRef:
        name: fetch-iks-cluster-config
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: ibmcloud-api-key
          value: $(params.api-key)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: cluster-pipeline-resources-directory-fallback
          value: .tekton-clusters
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      resources:
        inputs:
          - name: cluster
            resource: target-cluster
        outputs:
          - name: cluster
            resource: target-cluster
    - name: pipeline-1-kubectl-task
      runAfter: [fetch-iks-cluster-config]
      taskRef:
        name: kubernetes-contextual-execution
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: task-pvc-mountpath
          value: /pipelinerun
        - name: clusterPipelineResourcesDirectory
          value: /pipelinerun/.tekton-clusters
        - name: script
          value: |
            echo "** Here is the kubectl version:"
            kubectl version
            echo "** Here is the kubectl cluster-info:"
            kubectl cluster-info
            echo "** Here are the kubectl namespaces:"
            kubectl get namespaces
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      resources:
        inputs:
          - name: cluster
            resource: target-cluster
            from:
              - fetch-iks-cluster-config

    - name: deploy-dev
      taskRef:
        name: deploy-to-cluster
      runAfter: [pipeline-1-kubectl-task]
      params:
        - name: task-pvc
          value: $(params.pipeline-pvc)
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.revision)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: cluster-namespace
          value: $(params.dev-cluster-namespace)
        - name: cluster-region
          value: $(params.registry-region)
        - name: ibmcloud-api-key
          value: $(params.api-key)
        - name: allow-create-route
          value: "true"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
