---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "CI - Develop a secure app with DevSecOps practices"
template.description: "With this toolchain, you can develop an application utilizing DevSecOps best practices and test it on a Kubernetes cluster managed by the IBM Cloud Kubernetes Service.\n\nThe toolchain enables continuous delivery with Source Control, Delivery Pipelines for pull requests, and continuous integration. The delivery pipeline follows a shift-left approach and performs static code scans on source repositories, runs unit tests, builds docker image, scans application docker image for vulnerabilities, and applies a signature to the built image.\n\nThe toolchain collects pipeline run data at every stage as evidence for auditing purposes and stores it in the immutable form in IBM Cloud Object Storage. It enables the development team to record every successful application build as artifacts stored in the inventory repository.\n\nThe DevOps-Insights integration in the toolchain enables analysis of historical build data, trends, and detection anomalies.\n\nFor step-by-step instructions, follow the [tutorial](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-devsecops)."
template.gettingStarted: "**Your toolchain is ready!**\n**Quick start:** Check out the [tutorial](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-devsecops#devsecops-ci-toolchain-explore) on how to develop and build your application using DevSecOps best practices."
deploy.title: "Hello World Deploy Stage"
deploy.description: "hello-world simple toolchain"
deploy.longDescription: "Enter a name for the app that you want to deploy. Create a new IBM Cloud API Key or use an existing IBM Cloud API Key to retrieve your IBM Container Registry configuration to store the built application docker image and IBM Kubernetes Cluster configuration to deploy the built images.\n\n**Note**: If the cluster namespace doesn't exist, it is automatically created and configured for you."
deploy.appDescription: "Enter a name for the app that you want to deploy."
deploy.appName: "App name"
deploy.apikeyDescription: "The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service API and interact with the cluster. You can create your API by using the [IBM Cloud console](https://cloud.ibm.com/iam/apikeys) or by using the ibmcloud [iam api-key-create](https://cloud.ibm.com/docs/cli?topic=cli-ibmcloud_commands_iam#ibmcloud_iam_api_key_create) command. "
deploy.registryRegionDescription: "The IBM Cloud region for image registry"
deploy.registrynsDescription: "The namespace in the container image registry. You can set it up with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started."
deploy.regionDescription: "The IBM Cloud region that hosts the k8s machines where you want to deploy."
deploy.rgDescription: "The IBM Cloud resource group that hosts the k8s machines where you want to deploy."
deploy.clusterNameDescription: "The name of the k8s cluster. Retrieve it with [ibmcloud cs clusters] cmd or via the console at https://cloud.ibm.com/kubernetes/clusters."
deploy.namespaceDescription: "Kubernetes namespace"
deploy.apikey: "IBM Cloud API key"
deploy.containerregRegion: "Container registry region"
deploy.containerregns: "Container registry namespace"
deploy.imgregRegion: "Container image registry region"
deploy.imgregNs: "Container image registry namespace"
deploy.cluster: "Cluster name"
deploy.rg: "Resource group"
deploy.clusterNs: "Cluster namespace"
deploy.clusterDescription: ""
deploy.clusternsDescription: ""
deploy.keyCreation: "Generate Signing Keys"
deploy.keyDetails: "Specify the Key Protect instance name, where the image signing keys have been stored. The build and validation signer fields contain default names for these signers. The values must match the values created in the Key-Management-Admin-Template. See https://github.com/open-toolchain/key-management-admin-toolchain"
deploy.vaultName: "GPG signing key"
deploy.buildSigner: "DevOps Docker Image Build signer"
deploy.validationSigner: "DevOps Docker Image Validation signer"
region: "Dev cluster region"
prodStage: "Production environment"
headerSVG.think: "THINK"
headerSVG.code: "CODE"
headerSVG.deliver: "DELIVER"
headerSVG.run: "RUN"
headerSVG.manage: "MANAGE"
headerSVG.learn: "LEARN"
headerSVG.issueTracker: "Issue Tracker"
headerSVG.repoApp: "App Repo"
headerSVG.ciPipeline: "CI Pipeline"
headerSVG.keyProtect: "Key Protect"
headerSVG.devopsInsights: "DevOps Insights"
headerSVG.repoEvidence: "Evidence Locker"
headerSVG.prPipeline: "PR Pipeline"
headerSVG.repoInventory: "Inventory"
headerSVG.artifactory: "Artifactory"
headerSVG.tektonDefinitions: "Tekton Definitions"
headerSVG.tektonCommon: "Common Tekton Tasks"
headerSVG.deliveryPipeline: "Delivery Pipeline"
headerSVG.privateWorker: "Private Worker"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "REPOSITORY"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.dctpipeline: "DCT PIPELINE"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "WEB IDE"
headerSVG.kubernetes: "Kubernetes"
headerSVG.cluster: "Cluster"
headerSVG.bitbucket1: "Bitbucket"
headerSVG.bitbucket2: "Bitbucket"
headerSVG.GitHub1: "GitHub"
headerSVG.GitHub2: "GitHub"
headerSVG.gitlab3: "GitLab"
headerSVG.gitlab4: "GitLab"
doiToolchain.title: "Link to Existing DevOps Insights Toolchain"
doiToolchain.idDescription: "The ID of the toolchain with the existing DOI instance"
doiToolchain.description: "The ID of the toolchain that contains the DevOps Insights instance that CI interacts with."
doiToolchain.longDescription: "Link an existing DevOps Insights instance from another toolchain to this pipeline, so that all the build, deploy, and test records from the CI and CD Toolchain pipelines can be published in a centralised way."
doiToolchain.id: "DOI Toolchain ID"
doiToolchain.help: "CI toolchain needs a toolchain ID with an existing DevOps Insights instance, so that it is able to publish the deployment records to insights. If not provided it will look for a DOI instance in this toolchain."
doiToolchain.envDescription: "(Optional) The environment for the DOI interactions. If you provide this parameter, it will be used instead of the target environment from the inventory."
doiToolchain.env: "DOI target environment"
doiToolchain.idPlaceHolder: "Toolchain placeholder ID"
doiToolchain.targetPlaceHolder: "Target environment placeholder"
doiToolchain.service.description: "The toolchain that contains the Devops Insights instance CD interacts with."
imageSigning.title: "Image Signing"
imageSigning.description: "To enable image signing, you need to provide GPG keys. For more information, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-image-signing) for creating and exporting GPG signing keys."
imageSigning.longDescription: "Any images that are built by this toolchain and recorded in the inventory must be signed before they can be deployed to production.\n\n To enable image signing, you need to provide GPG keys. For more information, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-image-signing) for creating and exporting GPG signing keys."
imageSigning.linkText: "For more information about image signing, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-image-signing)."
imageSigning.name.title: "Name"
privateWorker.title: "TaaS Private Worker"
privateWorker.description: "To enable CISO image signing you need to have a TaaS private worker and an IBM CISO signing certificate."
privateWorker.longDescription: "Any images built by this toolchain and recorded in the inventory _must_ be signed through CISO, before they can be deployed to production. To enable CISO image signing you need to have a [TaaS private worker]() and an [IBM CISO signing certificate](."
privateWorker.linkText: "For more information on image signing please read this [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-image-signing)."
privateWorker.name.title: "Private Worker Name"
privateWorker.name.description: "Type a name for this tool integration, for example: my-private-worker. This name displays on your toolchain."
privateWorker.workerQueueCredentials.title: "TaaS Worker Service ID API Key"
privateWorker.workerQueueCredentials.description: "The Service API Key used by the private worker to authenticate access to the work queue"
wizard.welcome.description: "Continuously integrate with DevSecOps, including evidence collection, quality gates, artifact signing, automated tests, static code scans, vulnerability checks, and more.\n\nNote: Please ensure to create the [CD - Deploy a secure app with DevSecOps practices](https://cloud.ibm.com/devops/setup/deploy?repository=https%3A%2F%2Fus-south.git.cloud.ibm.com%2Fopen-toolchain%2Fcompliance-cd-toolchain&env_id=ibm:yp:us-south) toolchain separately for deploying application to upstream environments."
wizard.welcome.git.accept.label: "I understand that all users with [access to this toolchain](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-toolchains-using#managing_access_resource_groups) can access artifacts that are derived from the toolchain repositories, such as build artifacts in the Delivery Pipeline. (Select the check box to continue.)"
wizard.step.app.title: Application
wizard.step.inv.title: Inventory
wizard.step.issues.title: Issues
wizard.step.vault.title: Secrets
wizard.step.keyprotect.title: Key Protect
wizard.step.secretsmanager.title: Secrets Manager
wizard.step.hashicorpvault.title: HashiCorp Vault
wizard.step.evidence.title: Evidence Storage
wizard.step.cos.title: COS bucket
wizard.step.pipeline.title: Tekton Pipeline
wizard.step.deploy.label: Deploy
wizard.step.deploy.title: Deployment Target
wizard.step.image_signing.title: Image Signing
wizard.step.artifactory.title: Artifactory
wizard.step.optionaltools.title: Optional tools
wizard.step.slack.title: Slack
wizard.step.sonarqube.title: SonarQube
wizard.step.doi-toolchain.label: Insights Toolchain
wizard.step.doi-toolchain.title: DevOps Insights
wizard.step.summary.title: Summary
wizard.step.privateworker.title: "Delivery Pipeline Private Worker"
wizard.repo.invalidOptionMsg: "You have chosen an unsupported configuration option. Please enable **Advanced Options**."
wizard.app.title: "Application Repository"
wizard.app.longDescription: "The application repository is the project or service source code that the CI toolchain and pipeline builds, tests, and delivers to target artifact registries. The repository also contains configuration YAML files and scripts for running the custom pipeline tasks. For more information about custom pipeline tasks, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-custom-scripts).\n\nTo help you get started, the toolchain provides a [sample NodeJS App](https://us-south.git.cloud.ibm.com/open-toolchain/hello-compliance-app).\n\nBy default, the application repository template will be cloned to your Git Repo and Issue Tracking organization. To change the organization, enable **Advanced options**, and edit the **Repository owner** field."
wizard.app.clone: "Use default sample application"
wizard.app.link: "Bring your own application"
wizard.app.repoNamePlaceholder: "compliance-app-XXXXXXXXXX"
wizard.app.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-app-XXXXXXXXXX"
wizard.artifactory.title: "Artifactory"
wizard.artifactory.longDescription: "The CI Pipeline needs you to provide your IBM Artifactory credentials, in order to access a required compliance utility image that is used to run the bulk of the pipeline work. \n\nPlease go to your [Artifactory user profile]() to retrieve your API key credentials. \n\nThe name of the Artifactory registry is provided as a convenience check for your credentials. If they are invalid, then the name field will throw an error."
wizard.artifactory.docker: "Docker registry"
wizard.evidence.title: "Evidence Storage"
wizard.evidence.longDescription: "The evidence repository records the summary of all the evidence that is collected during the CI process. This evidence is collected by the pipeline during the pipeline run.\n\nYou can either choose to create a new evidence repository, which will be a clone of the [evidence locker repository template](https://us-south.git.cloud.ibm.com/open-toolchain/compliance-evidence-locker), or use an existing evidence repository that you are sharing between toolchains.\n\nBy default, the evidence repository template will be cloned to your Git Repo and Issue Tracking organization. To change the organization, enable **Advanced options**, and edit the **Repository owner** field.\n\nIt is a best practice to use a Cloud Object Storage bucket as an evidence locker to store all the evidence and artifacts that are collected during the pipeline run."
wizard.evidence.info: "For more information about Evidence Storage, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-evidence)."
wizard.evidence.clone: "Create new evidence locker repository"
wizard.evidence.link: "Use existing evidence locker repository"
wizard.evidence.repoNamePlaceholder: "compliance-evidence-XXXXXXXXXX"
wizard.evidence.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-evidence-XXXXXXXXXX"
wizard.evidence.cos.notification.title: "Cloud Object Storage bucket"
wizard.evidence.cos.notification.sutitle: "To meet compliance audit standards, evidence must be maintained in a secure and durable storage service like Cloud Object Storage. Use the default Git Repo and Issue Tracking-based option for evaluation purposes only."
wizard.evidence.cos.title: "COS bucket"
wizard.inventory.title: "Inventory Repository"
wizard.inventory.longDescription: "The inventory repository records details of artifacts that are built by the CI toolchains.\n\nYou can choose to either create a new inventory repository, which will be a clone of the [inventory repository template](https://us-south.git.cloud.ibm.com/open-toolchain/compliance-inventory), or use an existing inventory repository that you are sharing between toolchains.\n\nBy default, the inventory repository template will be cloned to your Git Repo and Issue Tracking organization. To change the organization, enable **Advanced options**, and edit the **Repository owner** field."
wizard.inventory.info: "For more information about Inventory, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-inventory)."
wizard.inventory.clone: "Create new inventory repository"
wizard.inventory.link: "Use existing inventory repository"
wizard.inventory.repoNamePlaceholder: "compliance-inventory-XXXXXXXXXX"
wizard.inventory.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-inventory-XXXXXXXXXX"
wizard.issues.title: "Issues Repository"
wizard.issues.longDescription: "The Git Repos and Issue Tracking repository records issues that are found while the CI pipeline is running.\n\nYou can choose to either create a new issues repository, which will be a clone of the [issues repository template](https://us-south.git.cloud.ibm.com/open-toolchain/compliance-incident-issues), or use an existing issues repository that you are sharing between toolchains.\n\nBy default, the issues repository template will be cloned to your Git Repo and Issue Tracking organization. To change the organization, enable **Advanced options**, and edit the **Repository owner** field."
wizard.issues.info: "For more information about Issues, see the [documentation](https://docs.gitlab.com/ee/user/project/issues/)."
wizard.issues.clone: "Create new issues repository"
wizard.issues.link: "Use existing issues repository"
wizard.issues.repoNamePlaceholder: "compliance-issues-XXXXXXXXXX"
wizard.issues.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-issues-XXXXXXXXXX"
wizard.optional.tools.title: "Other Tools"
wizard.optional.tools.longDescription: "These are optional tools that can be included in your compliance toolchain."
wizard.optional.tools.doi.tc.title: "Common DevOps Insights Toolchain"
wizard.optional.tools.doi.tc.description: "Publish the deployment records to a common DevOps Insights Toolchain."
wizard.optional.tools.doi.title: "DevOps Insights (no configuration required)"
wizard.optional.tools.doi.description: "DevOps Insights provides comprehensive insights from popular continuous integration and continuous delivery tools to increase the speed and control of your application delivery. View your pipeline test results for every build, from every deployment and environment. Create policies to ensure that only quality code is delivered to production, and review trends to understand improvements over time. For more information about DevOps Insights, see the [documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-viewing-data-overview)."
wizard.optional.tools.webide.title: "Orion WebIDE (no configuration required)"
wizard.optional.tools.webide.description: "Develop for the web and the cloud in this browser-based integrated development environment (IDE)."
wizard.optional.tools.slack.title: "Slack"
wizard.optional.tools.slack.description: "With Slack, you can collaborate with your team and receive notifications from your tools. If you don't have a Slack account, create one now."
wizard.optional.tools.sonarqube.title: "SonarQube"
wizard.optional.tools.sonarqube.description: "Run static code scan with the help of SonarQube."
wizard.optional.tools.privateworker.title: "Delivery Pipeline Private Worker"
wizard.optional.tools.privateworker.description: "The Delivery Pipeline Private Worker tool integration connects a private worker that can run Delivery Pipeline workloads in isolation."
wizard.pipeline.title: "Tekton Pipeline Definition Repository"
wizard.pipeline.longDescription: "The Tekton Pipeline repository contains Tekton resources that are defined in YAML files. These Tekton resources serve as code for both the CI and CD pipelines.\n\nDo not alter the code in this repository unless it is absolutely necessary."
wizard.pipeline.link: "Use existing pipeline repository"
wizard.pipeline.clone: "Create new pipeline repository"
wizard.summary.title: "Summary"
wizard.summary.success.title: "Congratulations!"
wizard.summary.success.subtitle: "You completed the toolchain configuration. To create the toolchain with your selected tools and settings, click Create.  \n\n**Important**: The toolchain created from this template creates artifacts and evidence to be used with an associated DevSecOps continuous deployment (CD) toolchain."
wizard.vault.title: "Secrets Management"
wizard.vault.longDescription: "Several tools in this toolchain, and possibly in your customizable scripts, require secrets to access privileged resources. An IBM Cloud API key is an example of such a secret. These secrets must be securely stored within an IBM-recommended secrets management tool, such as [IBM Key Protect for IBM Cloud](https://www.ibm.com/cloud/key-protect), [IBM Cloud Secrets Manager](https://www.ibm.com/cloud/secrets-manager), or [Hashicorp Vault](https://www.vaultproject.io/). The secrets management tool can be integrated into the toolchain so that you can easily reference the secrets in your Tekton pipeline."
wizard.vault.keyProtect.title: "Key Protect"
wizard.vault.keyProtect.description: "Key Protect is a cloud-based security service that provides life cycle management for encryption keys that are used in IBM Cloud services or customer-built applications."
wizard.vault.secretsManager.title: "Secrets Manager"
wizard.vault.secretsManager.description: "With Secrets Manager you can create, lease, and centrally manage secrets that are used in IBM Cloud services or your custom-built applications."
wizard.vault.notification.title: "Secrets Store"
wizard.vault.notification.sutitle: "As a best practice, store the secrets in one of the following tools."
wizard.vault.hashicorp.title: "HashiCorp Vault"
wizard.vault.hashicorp.description: "HashiCorp Vault is a secrets management solution that brokers access for both humans and machines, through programmatic access, to systems."
wizard.vault.info: "Select one or more secrets management tools."
cos.title: "Cloud Object Storage"
cos.description: "Information for Cloud Object Storage Integration."
cos.endpoint.description: "Endpoints are used with your credentials (bucket name, API Key) to tell the Compliance Pipelines where to look for your bucket. Choose an endpoint URL that is located in the same region as your service or application."
cos.bucketname.description: "Enter a bucket name in your Cloud Object Storage instance. The bucket is used as a locker to store the artifacts and evidence that are generated by the Compliance Pipelines."
cos.apikey.description: "Use a secret from the secrets store, or create a service ID API key that is used by the pipeline to write to the Cloud Object Storage bucket"
cos.apikey.key: "Service ID API Key"
cos.info: "Cloud Object Storage is used to store the evidence and artifacts that are generated by the Compliance Pipelines. Users must have a Cloud Object Storage instance and a bucket. For more information, see the [CI toolchain setup documentation](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-devsecops-tekton-ci-compliance) or the [Cloud Object Storage documentation](https://cloud.ibm.com/docs/cloud-object-storage)." 
cos.endpoint.title: "Cloud Object Storage endpoint"
cos.bucketname.title: "Bucket name in your Cloud Object Storage instance"
cos.apikey.title: "Use a secret from a secrets store by selecting the provider, group name, and secret name"
cos.service.description: "The information required to connect the toolchain with your Cloud Object Storage instance."
