---
version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - ci
    - app-repo
    - pipeline-repo
    - tekton-catalog-repo
    - evidence-repo
    - issues-repo
    - inventory-repo
    - artifactoryComp
    - privateWorker
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"

toolchain:
  name: >
    $env.toolchainName ? '{{toolchainName}}' : 'compliance-ci-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"

services:
  cos-bucket:
    service_id: customtool
    parameters:
      type: cos-bucket
      lifecyclePhase: "MANAGE"
      imageUrl:
        $ref: cos-logo.png
        $refType: image-data-uri
      documentationUrl: 'https://cloud.ibm.com/catalog/services/cloud-object-storage'
      name: Cloud Object Storage
      dashboard_url: 'https://cloud.ibm.com/catalog/services/cloud-object-storage'
      description: The information required to connect the toolchain with your Cloud Object Storage instance.

  doi-toolchain:
    service_id: customtool
    parameters:
      type: doi-toolchain
      lifecyclePhase: "LEARN"
      imageUrl:
        $ref: devops-insights.png
        $refType: image-data-uri
      documentationUrl: 'https://cloud.ibm.com/devops/insights/overviewNew?toolchainId={{form.customtool_doi-toolchain.parameters.doi-toolchain-id}}'
      name: Link existing DOI Toolchain
      dashboard_url: 'https://cloud.ibm.com/devops/insights/overviewNew?toolchainId={{form.customtool_doi-toolchain.parameters.doi-toolchain-id}}'
      description: The toolchain that contains the Devops Insights instance CD interacts with.

  slack:
    service_id: slack
    parameters:
      channel_name: ''
      api_token: ''
      team_url: ''

  privateWorker:
    service_id: private_worker
    parameters:
      name: >
        $env.privateWorkerName ? '{{privateWorkerName}}' : 'private-worker'
      workerQueueCredentials: '{{privateWorkerCreds}}'
      # TODO: this wont be needed once a fix is in place for https://github.ibm.com/org-ids/roadmap/issues/15360
      workerQueueIdentifier: '{{privateWorkerIdentifier}}'

  artifactoryComp:
    service_id: artifactory
    parameters:
      name: 'registry-for-images'
      dashboard_url: 'https://na.artifactory.swg-devops.com'
      repository_url: 'https://wcp-compliance-automation-team-docker-local.artifactory.swg-devops.com'
      repository_name: 'wcp-compliance-automation-team-docker-local'
      type: docker
      user_id: '{{form.pipeline.parameters.artifactory-userid}}'
      token: '{{form.pipeline.parameters.artifactory-token}}'

  app-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'compliance-app-{{timestamp}}'
      repo_url: >
        $env.app_repo ? $env.app_repo : $env.sourceRepoUrl ? '{{sourceRepoUrl}}' : 'https://github.ibm.com/one-pipeline/hello-compliance-app'
      source_repo_url: >
        $env.app_repo ? $env.app_repo : $env.sourceRepoUrl ? '{{sourceRepoUrl}}' : 'https://github.ibm.com/one-pipeline/hello-compliance-app'
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
      legal: true

  inventory-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'compliance-inventory-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-inventory'
      source_repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-inventory'
      has_issues: false
      enable_traceability: false
      legal: true

  issues-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'compliance-issues-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.issues_repo ? $env.issues_repo : $env.issuesRepo ? '{{issuesRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-incident-issues'
      source_repo_url: >
        $env.issues_repo ? $env.issues_repo : $env.issuesRepo ? '{{issuesRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-incident-issues'
      has_issues: true
      enable_traceability: false
      legal: true

  evidence-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'evidence-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.evidence_repo ? $env.evidence_repo : $env.evidenceRepo ? '{{evidenceRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-evidence-locker'
      source_repo_url: >
        $env.evidence_repo ? $env.evidence_repo : $env.evidenceRepo ? '{{evidenceRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-evidence-locker'
      has_issues: false
      enable_traceability: false
      legal: true

  pipeline-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'compliance-ci-toolchain'
      repo_url: >
        $env.pipeline_repo ? $env.pipeline_repo : $env.pipelineRepo ? '{{pipelineRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-ci-toolchain'
      source_repo_url: >
        $env.pipeline_repo ? $env.pipeline_repo : $env.pipelineRepo ? '{{pipelineRepo}}' : 'https://github.ibm.com/one-pipeline/compliance-ci-toolchain'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ['pipeline']

  tekton-catalog-repo:
    service_id: github_integrated
    parameters:
      repo_name: 'common-tekton-tasks'
      repo_url: >
        $env.tekton_catalog_repo ? $env.tekton_catalog_repo : $env.tektonCatalogRepo ? '{{tektonCatalogRepo}}' : 'https://github.ibm.com/one-pipeline/common-tekton-tasks'
      source_repo_url: >
        $env.tekton_catalog_repo ? $env.tekton_catalog_repo : $env.tektonCatalogRepo ? '{{tektonCatalogRepo}}' : 'https://github.ibm.com/one-pipeline/common-tekton-tasks'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ['pipeline']

  config-repo:
    service_id: >
      $env.configRepoEnabled ? 'github_integrated' : ''
    parameters:
      repo_url: >
        $env.configRepoEnabled ? '{{onePipelineConfigRepo}}' : 'https://github.ibm.com/one-pipeline/sample-config-repo'
      source_repo_url: >
        $env.configRepoEnabled ? '{{onePipelineConfigRepo}}' : 'https://github.ibm.com/one-pipeline/sample-config-repo'
      type: "link"
      has_issues: false
      enable_traceability: false
      legal: true

  pr:
    service_id: pipeline
    parameters:
      services:
        - app-repo
        - pipeline-repo
        - tekton-catalog-repo
        - config-repo
      name: 'ci-pr-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: pr-tekton.yaml
        env:
          PIPELINE_REPO: pipeline-repo
          APP_NAME: >
            $env.appName ? '{{appName}}' : '{{form.pipeline.parameters.app-name}}'
          APP_REPO: app-repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          ARTIFACTORY_DOCKER_CONFIG_JSON: >
            $env.artifactoryDockerConfigJson ? '{{artifactoryDockerConfigJson}}' : '{{form.artifactoryComp.parameters.docker_config_json}}'
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          ONE_PIPELINE_REPO: '{{services.app-repo.parameters.repo_url}}'
          ONE_PIPELINE_CONFIG: >
            $env.onePipelineConfig ? '{{onePipelineConfig}}' : '.one-pipeline.yaml'
          ONE_PIPELINE_CONFIG_REPO: >
            $env.onePipelineConfigRepo ? '{{onePipelineConfigRepo}}' : ''
          ONE_PIPELINE_CONFIG_BRANCH: >
            $env.onePipelineConfigBranch ? '{{onePipelineConfigBranch}}' : 'master'
          VAULT_SECRET: '{{form.pipeline.parameters.vault_secret}}'
          GIT_TOKEN: >
            $env.gitToken ? '{{gitToken}}' : ''
          ONE_PIPELINE_DOCKER_CONFIG_JSON: >
            $env.onePipelineDockerConfigJson ? '{{onePipelineDockerConfigJson}}' : ''
        execute: false
  ci:
    service_id: pipeline
    parameters:
      services:
        - app-repo
        - pipeline-repo
        - tekton-catalog-repo
        - config-repo
        - customtool_doi-toolchain
      name: 'ci-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: ci-tekton.yaml
        env:
          PIPELINE_REPO: pipeline-repo
          APP_NAME: >
            $env.appName ? '{{appName}}' : '{{form.pipeline.parameters.app-name}}'
          APP_REPO: app-repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          DEV_RESOURCE_GROUP: '{{form.pipeline.parameters.dev-resource-group}}'
          DEV_CLUSTER_NAME: '{{form.pipeline.parameters.dev-cluster-name}}'
          DEV_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.dev-cluster-namespace}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          ARTIFACTORY_DOCKER_CONFIG_JSON: >
            $env.artifactoryDockerConfigJson ? '{{artifactoryDockerConfigJson}}' : '{{form.artifactoryComp.parameters.docker_config_json}}'
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          DOI_TOOLCHAIN_ID: '{{form.customtool_doi-toolchain.parameters.doi-toolchain-id}}'
          DOI_ENVIRONMENT: '{{form.customtool_doi-toolchain.parameters.doi-environment}}'
          COS_BUCKET_NAME: '{{form.customtool_cos-bucket.parameters.cos-bucket-name}}'
          COS_ENDPOINT: '{{form.customtool_cos-bucket.parameters.cos-endpoint}}'
          ONE_PIPELINE_REPO: '{{services.app-repo.parameters.repo_url}}'
          VAULT_SECRET: '{{form.pipeline.parameters.vault_secret}}'
          ONE_PIPELINE_CONFIG: >
            $env.onePipelineConfig ? '{{onePipelineConfig}}' : '.one-pipeline.yaml'
          ONE_PIPELINE_CONFIG_REPO: >
            $env.onePipelineConfigRepo ? '{{onePipelineConfigRepo}}' : ''
          ONE_PIPELINE_CONFIG_BRANCH: >
            $env.onePipelineConfigBranch ? '{{onePipelineConfigBranch}}' : 'master'
          GIT_TOKEN: >
            $env.gitToken ? '{{gitToken}}' : ''
          ONE_PIPELINE_DOCKER_CONFIG_JSON: >
            $env.onePipelineDockerConfigJson ? '{{onePipelineDockerConfigJson}}' : ''
        execute: false

  webide:
    service_id: orion

  devops-insights:
    service_id: draservicebroker

  kp-vault:
    service_id: keyprotect
    parameters:
      name: 'kp-compliance-secrets'

  hc-vault:
    service_id: hashicorpvault
    parameters:
      name: 'hc-compliance-secrets'
      server_url: 'https://vserv.sos.ibm.com:8200'
      dashboard_url: 'https://vserv.sos.ibm.com:8200/ui'
      authentication_method: 'approle'

form:
  pipeline:
    parameters:
      app-name: >
        $env.appName ? '{{appName}}' : 'hello-compliance-app'
      api-key: '{{apiKey}}'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      dev-region: '{{devRegion}}'
      dev-resource-group: '{{devResourceGroup}}'
      app-repo: '{{sourceRepoUrl}}'
      pipeline-repo: '{{pipelineRepo}}'
      tekton-catalog-repo: '{{tektonCatalogRepo}}'
      dev-cluster-name: >
        $env.devClusterName ? '{{devClusterName}}' : 'default'
      dev-cluster-namespace: >
        $env.devClusterNamespace ? '{{devClusterNamespace}}' : 'default'
      build-cluster-namespace: build
      artifactory-userid: '{{artifactoryUserId}}'
      artifactory-token: '{{artifactoryToken}}'
      vault_secret: '{{vaultSecret}}'
    schema:
      $ref: deploy.json

  customtool_cos-bucket:
    parameters:
      cos-bucket-name: >
        $env.cosBucketName ? '{{cosBucketName}}' : ''
      cos-endpoint: >
        $env.cosEndpoint ? '{{cosEndpoint}}' : ''
    schema:
      $ref: cos.json

  customtool_doi-toolchain:
    parameters:
      doi-toolchain-id: >
        $env.doiToolchainId ? '{{doiToolchainId}}' : ''
      doi-environment: >
        $env.doiEnvironment ? '{{doiEnvironment}}' : ''
    schema:
      $ref: doi-toolchain.json
