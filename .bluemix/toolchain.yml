---
version: '3'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: develop.svg
  required:
    - build
    - ci
    - app-repo
    - pipeline-repo
    - tekton-catalog-repo
    - evidence-repo
    - issues-repo
    - inventory-repo
    - imageSigning
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: ""
  wizard:
    $ref: wizard.yml

toolchain:
  name: >
    $env.toolchainName ? '{{toolchainName}}' : 'compliance-ci-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"

services:
  cos-bucket:
    service_id: customtool
    parameters:
      type: cos-bucket
      lifecyclePhase: "MANAGE"
      imageUrl:
        $ref: cos-logo.png
        $refType: image-data-uri
      documentationUrl: 'https://cloud.ibm.com/catalog/services/cloud-object-storage'
      name: Cloud Object Storage
      dashboard_url: 'https://cloud.ibm.com/catalog/services/cloud-object-storage'
      description:
        $ref: "#/messages/cos.service.description"

  slack:
    service_id: slack
    parameters:
      channel_name: >
        $env.slackChannelName ? '{{slackChannelName}}' : ''
      api_token: >
        $env.slackWebhook ? '{{slackWebhook}}' : ''
      team_url: >
        $env.slackTeamName ? '{{slackTeamName}}' : ''

  privateWorker:
    service_id: private_worker
    parameters:
      name: >
        $env.privateWorkerName ? '{{privateWorkerName}}' : 'private-worker'
      workerQueueCredentials: '{{privateWorkerCreds}}'
      # TODO: this wont be needed once a fix is in place for https://github.ibm.com/org-ids/roadmap/issues/15360
      workerQueueIdentifier: '{{privateWorkerIdentifier}}'

  app-repo:
    service_id: 'hostedgit'
    parameters:
      repo_name: 'compliance-app-{{timestamp}}'
      repo_url: >
        $env.app_repo ? $env.app_repo : $env.sourceRepoUrl ? '{{sourceRepoUrl}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-compliance-app':
            'https://github.ibm.com/open-toolchain/hello-compliance-app'
      source_repo_url: >
        $env.app_repo ? $env.app_repo : $env.sourceRepoUrl ? '{{sourceRepoUrl}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-compliance-app':
            'https://github.ibm.com/open-toolchain/hello-compliance-app'
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
      legal: true

  inventory-repo:
    service_id: 'hostedgit'
    parameters:
      repo_name: 'compliance-inventory-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-inventory':
            'https://github.ibm.com/open-toolchain/compliance-inventory'
      source_repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-inventory':
            'https://github.ibm.com/open-toolchain/compliance-inventory'
      has_issues: false
      enable_traceability: false
      legal: true

  issues-repo:
    service_id: 'hostedgit'
    parameters:
      repo_name: 'compliance-issues-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.issues_repo ? $env.issues_repo : $env.issuesRepo ? '{{issuesRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-incident-issues':
            'https://github.ibm.com/open-toolchain/compliance-incident-issues'
      source_repo_url: >
        $env.issues_repo ? $env.issues_repo : $env.issuesRepo ? '{{issuesRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-incident-issues':
            'https://github.ibm.com/open-toolchain/compliance-incident-issues'
      has_issues: true
      enable_traceability: false
      legal: true

  evidence-repo:
    service_id: 'hostedgit'
    parameters:
      repo_name: 'compliance-evidence-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.evidence_repo ? $env.evidence_repo : $env.evidenceRepo ? '{{evidenceRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-evidence-locker':
            'https://github.ibm.com/open-toolchain/compliance-evidence-locker'
      source_repo_url: >
        $env.evidence_repo ? $env.evidence_repo : $env.evidenceRepo ? '{{evidenceRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-evidence-locker':
            'https://github.ibm.com/open-toolchain/compliance-evidence-locker'
      has_issues: false
      enable_traceability: false
      legal: true
      cos: true

  pipeline-repo:
    service_id: 'hostedgit'
    parameters:
      repo_name: 'compliance-pipelines-{{timestamp}}'
      repo_url: >
        $env.pipeline_repo ? $env.pipeline_repo : $env.pipelineRepo ? '{{pipelineRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-pipelines':
            'https://github.ibm.com/open-toolchain/compliance-pipelines'
      source_repo_url: >
        $env.pipeline_repo ? $env.pipeline_repo : $env.pipelineRepo ? '{{pipelineRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-pipelines':
            'https://github.ibm.com/open-toolchain/compliance-pipelines'
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ['pipeline']

  config-repo:
    service_id: >
      $env.configRepoEnabled ? 'hostedgit' : ''
    parameters:
      repo_url: >
        $env.configRepoEnabled ? '{{onePipelineConfigRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/sample-config-repo':
            'https://github.ibm.com/open-toolchain/sample-config-repo'
      source_repo_url: >
        $env.configRepoEnabled ? '{{onePipelineConfigRepo}}' :
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/sample-config-repo':
            'https://github.ibm.com/open-toolchain/sample-config-repo'
      type: "clone"
      has_issues: false
      enable_traceability: false
      legal: true

  pr:
    service_id: pipeline
    parameters:
      services:
        - app-repo
        - pipeline-repo
        - config-repo
      name: 'ci-pr-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: pr-tekton.yaml
        env:
          PIPELINE_REPO: pipeline-repo
          APP_NAME: >
            $env.appName ? '{{appName}}' : '{{form.pipeline.parameters.app-name}}'
          APP_REPO: app-repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          ONE_PIPELINE_REPO: '{{services.app-repo.parameters.repo_url}}'
          ONE_PIPELINE_CONFIG: >
            $env.onePipelineConfig ? '{{onePipelineConfig}}' : '.one-pipeline.yaml'
          ONE_PIPELINE_CONFIG_REPO: >
            $env.onePipelineConfigRepo ? '{{onePipelineConfigRepo}}' : ''
          ONE_PIPELINE_CONFIG_BRANCH: >
            $env.onePipelineConfigBranch ? '{{onePipelineConfigBranch}}' : 'master'
          GIT_TOKEN: >
            $env.gitToken ? '{{gitToken}}' : ''
          ONE_PIPELINE_DOCKER_CONFIG_JSON: >
            $env.onePipelineDockerConfigJson ? '{{onePipelineDockerConfigJson}}' : 'eyJhdXRocyI6e319'
          PR_REPOSITORY: '{{services.app-repo.parameters.repo_name}}'
          # Private Worker for the pipeline
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          SLACK_ENABLED: >
            $env.slackEnabled ? '{{slackEnabled}}' : '1'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'pr-listener-gitlab'
          PIPELINE_REPO_URL: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/compliance-ci-toolchain':
            'https://github.ibm.com/open-toolchain/compliance-ci-toolchain'
        execute: false
  ci:
    service_id: pipeline
    parameters:
      services:
        - app-repo
        - pipeline-repo
        - config-repo
      name: 'ci-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: ci-tekton.yaml
        env:
          PIPELINE_REPO: pipeline-repo
          APP_NAME: >
            $env.appName ? '{{appName}}' : '{{form.pipeline.parameters.app-name}}'
          APP_REPO: app-repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          DEV_RESOURCE_GROUP: '{{form.pipeline.parameters.dev-resource-group}}'
          DEV_CLUSTER_NAME: '{{form.pipeline.parameters.dev-cluster-name}}'
          DEV_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.dev-cluster-namespace}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          DOI_TOOLCHAIN_ID: '{{form.customtool_doi-toolchain.parameters.doi-toolchain-id}}'
          DOI_ENVIRONMENT: '{{form.customtool_doi-toolchain.parameters.doi-environment}}'
          COS_BUCKET_NAME: '{{form.customtool_cos-bucket.parameters.cos-bucket-name}}'
          COS_ENDPOINT: '{{form.customtool_cos-bucket.parameters.cos-endpoint}}'
          COS_API_KEY: '{{form.customtool_cos-bucket.parameters.cos-api-key}}'
          ONE_PIPELINE_REPO: '{{services.app-repo.parameters.repo_url}}'
          VAULT_SECRET: '{{form.image_signing.parameters.vault_secret}}'
          # Private Worker for the pipeline
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          ONE_PIPELINE_CONFIG: >
            $env.onePipelineConfig ? '{{onePipelineConfig}}' : '.one-pipeline.yaml'
          ONE_PIPELINE_CONFIG_REPO: >
            $env.onePipelineConfigRepo ? '{{onePipelineConfigRepo}}' : ''
          ONE_PIPELINE_CONFIG_BRANCH: >
            $env.onePipelineConfigBranch ? '{{onePipelineConfigBranch}}' : 'master'
          GIT_TOKEN: >
            $env.gitToken ? '{{gitToken}}' : ''
          ONE_PIPELINE_DOCKER_CONFIG_JSON: >
            $env.onePipelineDockerConfigJson ? '{{onePipelineDockerConfigJson}}' : 'eyJhdXRocyI6e319'
          SLACK_ENABLED: >
            $env.slackEnabled ? '{{slackEnabled}}' : '1'
          GIT_CI_TIMED_TRIGGER_DISABLE: >
            $env.disableGitCiTimedTrigger === 'false' ? false : true
          REPO_COMMIT_EVENT_LISTENER_NAME: 'ci-listener-gitlab'
        execute: false

  webide:
    service_id: orion

  devops-insights:
    service_id: draservicebroker

  kp-vault:
    service_id: keyprotect
    parameters:
      name: >
        $env.kpName ? '{{kpName}}' : 'kp-compliance-secrets'
      region: >
        $env.kpRegion ? '{{kpRegion}}' : ''
      resource-group: >
        $env.kpResourceGroup ? '{{kpResourceGroup}}' : ''
      instance-name: >
        $env.kpInstanceName ? '{{kpInstanceName}}' : ''

  sm-vault:
    service_id: secretsmanager
    parameters:
      name: >
        $env.smName ? '{{smName}}' : 'sm-compliance-secrets'
      region: >
        $env.smRegion ? '{{smRegion}}' : ''
      resource-group: >
        $env.smResourceGroup ? '{{smResourceGroup}}' : ''
      instance-name: >
        $env.smInstanceName ? '{{smInstanceName}}' : ''

  hc-vault:
    service_id: hashicorpvault
    parameters:
      name: >
        $env.hcName ? '{{hcName}}' : 'hc-compliance-secrets'
      server_url: >
        $env.hcServerUrl ? '{{hcServerUrl}}' : 'https://vserv.sos.ibm.com:8200'
      dashboard_url: >
        $env.hcDashboardUrl ? '{{hcDashboardUrl}}' : 'https://vserv.sos.ibm.com:8200/ui'
      authentication_method: >
        $env.hcAuthenticationMethod ? '{{hcAuthenticationMethod}}' : 'approle'
      role_id: >
        $env.hcRoleId ? '{{hcRoleId}}' : ''
      secret_id: >
        $env.hcSecretId ? '{{hcSecretId}}' : ''
      path: >
        $env.secretsPath ? '{{secretsPath}}' : ''

form:
  pipeline:
    parameters:
      app-name: >
        $env.appName ? '{{appName}}' : 'hello-compliance-app'
      api-key: '{{apiKey}}'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      dev-region: '{{devRegion}}'
      dev-resource-group: '{{devResourceGroup}}'
      app-repo: '{{sourceRepoUrl}}'
      pipeline-repo: '{{pipelineRepo}}'
      tekton-catalog-repo: '{{tektonCatalogRepo}}'
      dev-cluster-name: >
        $env.devClusterName ? '{{devClusterName}}' : 'default'
      dev-cluster-namespace: >
        $env.devClusterNamespace ? '{{devClusterNamespace}}' : 'default'
      build-cluster-namespace: build
    schema:
      $ref: deploy.json

  image_signing:
    parameters:
      vault_secret: '{{vaultSecret}}'
    schema:
      $ref: imageSigning.json

  customtool_cos-bucket:
    parameters:
      cos-bucket-name: >
        $env.cosBucketName ? '{{cosBucketName}}' : ''
      cos-endpoint: >
        $env.cosEndpoint ? '{{cosEndpoint}}' : ''
    schema:
      $ref: cos.json
