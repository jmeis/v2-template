---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-pipeline
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: branch
    - name: target-branch
      description: target branch
    - name: api-key
      description: The IBM Cloud API key is used to access the IBM Cloud Kubernetes
        Service API and interact with the cluster. You can obtain your API key with
        'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys
        by clicking **Create API key** (Each API key only can be viewed once).
    - name: repository-integration
      description: the repo integration name
    - name: commit-id
      description: commit id
    - name: pipeline-debug
      description: toggles debug mode for the pipeline
    - name: pr-url
      description: pr url

  workspaces:
    - name: artifacts

  tasks:
    - name: fetch-credentials
      taskRef:
        name: git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: ibmcloud-api-key
          value: $(params.api-key)
        - name: repository-integration
          value: $(params.repository-integration)
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: setup-set-status
      runAfter:
        - fetch-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
      taskSpec:
        steps:
          - name: save-git-token-to-file
            image: ibmcom/pipeline-base-image:2.6
            workingDir: "/artifacts"
            command: ["/bin/bash", "-c"]
            args:
              - |
                #!/bin/bash
                set -e -o pipefail
                pwd
                env
                trap env EXIT
                set -x
                source ./build.properties
                echo -n $GIT_TOKEN > ./github-token
        workspaces:
          - name: artifacts
            mountPath: /artifacts

    - name: fetch-code
      runAfter:
        - fetch-credentials
      taskRef:
        name: git-clone
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: gitsecure-vulnerability-scan-status-pending
      runAfter:
        - fetch-code
        - setup-set-status
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: pending
        - name: context
          value: tekton/pr-gitsecure-vulnerability-scan
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: gitsecure-vulnerability-scan
      runAfter:
        - gitsecure-vulnerability-scan-status-pending
      taskRef:
        name: gitsecure-discovery
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: commit-id
          value: $(params.commit-id)

    - name: set-gitsecure-vulnerability-scan-status
      runAfter:
        - gitsecure-vulnerability-scan
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: "$(tasks.gitsecure-vulnerability-scan.results.status)"
        - name: context
          value: tekton/pr-gitsecure-vulnerability-scan
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: gitsecure-vulnerability-remediation
      runAfter:
        - gitsecure-vulnerability-scan
      taskRef:
        name: gitsecure-vulnerability-remediation
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: pr-url
          value: $(params.pr-url)
        - name: commit-id
          value: $(params.commit-id)

    - name: gitsecure-cis
      taskRef:
        name: gitsecure-cis-check
      runAfter:
        - gitsecure-vulnerability-scan
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: pr-url
          value: $(params.pr-url)
        - name: commit-id
          value: $(params.commit-id)

    - name: gitsecure-ossc
      runAfter:
        - gitsecure-vulnerability-scan
      taskRef:
        name: gitsecure-ossc-check
      params:
        - name: repository
          value: $(params.repository)
        - name: revision
          value: $(params.branch)
        - name: api-key
          value: $(params.api-key)
        - name: commit-id
          value: $(params.commit-id)

    - name: unit-tests-status-pending
      runAfter:
        - setup-set-status
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: pending
        - name: context
          value: tekton/pr-unit-tests
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: run-unit-tests
      runAfter:
        - unit-tests-status-pending
        - fetch-code
      taskRef:
        name: util-run
      workspaces:
        - name: scripts
          workspace: artifacts
      params:
        - name: script
          value: . /root/.nvm/nvm.sh && cd /scripts/$(echo $(params.repository) | sed -E "s/(.*)(\/)//") && npm ci -q && npm run test
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: set-unit-test-status
      runAfter:
        - run-unit-tests
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: $(tasks.run-unit-tests.results.status)
        - name: context
          value: tekton/pr-unit-tests
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: set-github-status-checks-pending
      runAfter:
        - set-unit-test-status
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: pending
        - name: context
          value: tekton/pr-compliance
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: check-github-statuses
      runAfter:
        - set-github-status-checks-pending
      taskRef:
        name: compliance-check-github-statuses
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: target-branch
          value: $(params.target-branch)
        - name: required-checks
          value: |
            [{
              "type": "branch-protection",
              "name": "code-review",
              "params": {
                "checks": [
                  "tekton/pr-compliance"
                ]
              }
            }]
        - name: collect-evidence
          value: "false"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: set-github-status
      runAfter:
        - check-github-statuses
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: github-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.commit-id)
        - name: state
          value: $(tasks.check-github-statuses.results.status)
        - name: context
          value: tekton/pr-compliance
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: pr-pipeline-evaluator
      runAfter:
        - set-github-status
      taskRef:
        name: util-evaluate-pipeline-results
      params:
        - name: results
          value: |
            [
              {
                "name": "run-unit-tests",
                "expected": "success",
                "actual": "$(tasks.run-unit-tests.results.status)"
              },
              {
                "name": "check-github-statuses",
                "expected": "success",
                "actual": "$(tasks.check-github-statuses.results.status)"
              },
              {
                "name": "gitsecure-vulnerability-scan",
                "expected": "success",
                "actual": "$(tasks.gitsecure-vulnerability-scan.results.status)"
              }
            ]
