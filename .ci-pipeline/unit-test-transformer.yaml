---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: unit-test-transformer
spec:
  params:
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
    - name: result-status
      description: unit test run aggregated status
  results:
    - name: file-locations
    - name: test-types
  workspaces:
    - name: artifacts
      mountPath: /artifacts
  steps:
    - name: transform
      image: ibmcom/pipeline-base-image:2.6
      env:
        - name: RESULT_STATUS
          value: $(params.result-status)
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
      workingDir: /artifacts
      script: |
        #!/bin/bash

        if [ "$PIPELINE_DEBUG" = 1 ]; then
          pwd
          env
          trap env EXIT
          set -x
        fi

        DATE=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")

        if [ "$RESULT_STATUS" = "success" ]; then
          FAILURES=0
          PASSES=1
        else
          FAILURES=1
          PASSES=0
        fi

        TEST_DATA=$(jq --arg key0   "stats" \
            --argjson value0 "{ \
            \"suites\": 1, \
            \"tests\": 1, \
            \"passes\": $PASSES, \
            \"pending\": 0, \
            \"failures\": $FAILURES, \
            \"start\": \"${DATE}\", \
            \"end\": \"${DATE}\" \
          }" \
          --arg key1 "tests" \
          --argjson value1 "[{ \
              \"title\": \"Unit tests\", \
              \"fullTitle\": \"Unit tests - aggregated results\", \
              \"duration\": 0, \
              \"currentRetry\": 0, \
              \"err\": {} \
          }]" \
          --arg key2 "pending" \
          --argjson value2 "[]" \
          '. | .[$key0]=$value0 | .[$key1]=$value1 | .[$key2]=$value2' \
          <<<'{}')

        if [ "$RESULT_STATUS" = "success" ]; then
          TEST_DATA=$(echo $TEST_DATA | jq ".passes += [
            {
              \"title\": \"Unit tests\", \
              \"fullTitle\": \"Unit tests - aggregated results\", \
              \"duration\": 0, \
              \"currentRetry\": 0, \
              \"err\": {} \
            }
          ]")
          TEST_DATA=$(echo $TEST_DATA | jq ".failures += []")
        else
          TEST_DATA=$(echo $TEST_DATA | jq ".failures += [
            {
              \"title\": \"Unit tests\", \
              \"fullTitle\": \"Unit tests - aggregated results\", \
              \"duration\": 0, \
              \"currentRetry\": 0, \
              \"err\": {} \
            }
          ]")
          TEST_DATA=$(echo $TEST_DATA | jq ".passes += []")
        fi

        echo "$TEST_DATA" > ./testresult.json
        cat ./testresult.json
        echo -n "unittest" > $(results.test-types.path)
        echo -n "./testresult.json" > $(results.file-locations.path)
